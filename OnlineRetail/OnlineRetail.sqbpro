<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="/Users/tranlai/Projects/OnlineRetail/OnlineRetail/OnlineRetail.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="937"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,22:mainProductsWithCategories"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="ProductsWithCategories" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="18"/><column index="2" value="86"/><column index="3" value="64"/><column index="4" value="109"/><column index="5" value="119"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="carts" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="41"/><column index="2" value="47"/><column index="3" value="59"/><column index="4" value="59"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="categories" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="18"/><column index="2" value="119"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="productImage" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="59"/><column index="2" value="55"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="products" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="18"/><column index="2" value="86"/><column index="3" value="64"/><column index="4" value="46"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">-- Create a table for products
CREATE TABLE products (
    id INTEGER PRIMARY KEY,
    name TEXT,
    categoryId INTEGER,
    price REAL,
	FOREIGN KEY(categoryId) REFERENCES categories(id)
);

INSERT INTO products (name, categoryId, price) VALUES
('Smartphone A2', 1, 699.99),
('Laptop E3', 1, 899.99),
('Sneakers O1', 7, 99.99);

SELECT * FROM products;
-- Create indexes on relevant columns
CREATE INDEX idx_product_name ON products (name);
CREATE INDEX idx_product_categoryId ON products (categoryId);
CREATE INDEX idx_product_price ON products (price);

EXPLAIN QUERY PLAN SELECT * FROM products WHERE name = 'Smartphone A2';

PRAGMA index_list('products');


SELECT * FROM categories;
-- Query to retrieve products with a price less than $50
SELECT * FROM products WHERE price &lt; 50;

-- Create an index on the 'price' column to optimize the query
CREATE INDEX idx_price ON products (price);

-- Analyze query plan to ensure index usage
EXPLAIN QUERY PLAN SELECT * FROM products WHERE price &lt; 50;

CREATE TABLE categories (
	id INTEGER PRIMARY KEY,
	categoryName TEXT
);
INSERT INTO categories (categoryName) VALUES
('Mobile &amp;  Laptop'),
('Gaming Entertainment'),
('Vehicles'),
('Furnitures'),
('Fashion Accessories'),
('Food &amp; Drink'),
('Sport');

-- CREATE TABLE productImage(
-- 	productId INTEGER,
-- 	imageUrl TEXT,
-- 	FOREIGN KEY(productId) REFERENCES products(id)
-- );
CREATE TABLE productImage (
    productId INTEGER NOT NULL,
    imageUrl TEXT,
    FOREIGN KEY(productId) REFERENCES products(id) ON DELETE CASCADE,
    PRIMARY KEY(productId, imageUrl)
);

-- DROP TABLE  productImage;

CREATE TABLE productSize(
	productId INTEGER,
	size INTEGER,
	IsSoldOut  NUMERIC NOT NULL DEFAULT 0,
	PRIMARY KEY (productId, size),
	FOREIGN KEY(productId) REFERENCES products(id)
);
INSERT INTO productSize (productId, size) VALUES
(1, 100), 
(2, 200), 
(3, 150);

CREATE TABLE carts(
	cardId INTEGER PRIMARY KEY,
	amount INTEGER,
	totalPrice REAL,
	productId INTEGER,
	FOREIGN KEY(productId) REFERENCES products(id)
);

CREATE TABLE members(
	fullName TEXT NOT NULL,
	username TEXT UNIQUE,
	memberId TEXT PRIMARY KEY,
	password BINARY(128) NOT NULL
);

SELECT  products.* , categories.categoryName FROM products INNER JOIN categories ON products.categoryId = categories.id WHERE categories.id = 1;

CREATE VIEW ProductsWithCategories AS
SELECT p.*, c.categoryName
FROM products p
INNER JOIN categories c ON p.categoryId = c.id;

SELECT * FROM ProductsWithCategories WHERE categoryId = @Id;
SELECT * FROM ProductsWithCategories WHERE categoryId = 1;

SELECT * FROM carts;


SELECT products.*, productImage.imageUrl FROM products INNER JOIN productImage ON products.id = productImage.productId WHERE name LIKE '%o%';

SELECT *
        FROM products
        WHERE price &gt; 900 AND price &lt; 1000;
		
		
-- SELECT 
--     c.cardId,
--     c.amount,
--     SUM(p.price * c.amount) AS totalPrice,
--     c.productId
-- FROM 
--     carts c
-- JOIN 
--     products p ON c.productId = p.id
-- GROUP BY 
--     c.cardId, c.amount, c.productId;</sql><current_tab id="0"/></tab_sql></sqlb_project>
